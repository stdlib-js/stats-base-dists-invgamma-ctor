// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-property@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-entropy@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-kurtosis@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-mean@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-mode@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-quantile@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-logpdf@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-skewness@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-stdev@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-variance@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-cdf@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-invgamma-pdf@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.0.2-esm/index.mjs";function j(){var s,e;if(!(this instanceof j))return 0===arguments.length?new j:new j(arguments[0],arguments[1]);if(arguments.length){if(e=arguments[1],!i(s=arguments[0]))throw new TypeError(f("invalid argument. First shape parameter must be a positive number. Value: `%s`.",s));if(!i(e))throw new TypeError(f("invalid argument. Second shape parameter must be a positive number. Value: `%s`.",e))}else s=1,e=1;return t(this,"alpha",{configurable:!1,enumerable:!0,get:function(){return s},set:function(t){if(!i(t))throw new TypeError(f("invalid assignment. Must be a positive number. Value: `%s`.",t));s=t}}),t(this,"beta",{configurable:!1,enumerable:!0,get:function(){return e},set:function(t){if(!i(t))throw new TypeError(f("invalid assignment. Must be a positive number. Value: `%s`.",t));e=t}}),this}e(j.prototype,"entropy",(function(){return n(this.alpha,this.beta)})),e(j.prototype,"kurtosis",(function(){return r(this.alpha,this.beta)})),e(j.prototype,"mean",(function(){return a(this.alpha,this.beta)})),e(j.prototype,"mode",(function(){return m(this.alpha,this.beta)})),e(j.prototype,"skewness",(function(){return p(this.alpha,this.beta)})),e(j.prototype,"stdev",(function(){return h(this.alpha,this.beta)})),e(j.prototype,"variance",(function(){return l(this.alpha,this.beta)})),s(j.prototype,"cdf",(function(t){return u(t,this.alpha,this.beta)})),s(j.prototype,"logpdf",(function(t){return d(t,this.alpha,this.beta)})),s(j.prototype,"pdf",(function(t){return b(t,this.alpha,this.beta)})),s(j.prototype,"quantile",(function(t){return o(t,this.alpha,this.beta)}));export{j as default};
//# sourceMappingURL=index.mjs.map
